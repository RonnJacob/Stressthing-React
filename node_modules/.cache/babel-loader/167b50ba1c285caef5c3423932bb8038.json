{"ast":null,"code":"import _classCallCheck from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ronn/Desktop/HackUMass/StressThing/src/components/ingredients/Ingredients.js\";\nimport React, { Component } from 'react';\nimport '../../assets/css/linearicons.css';\nimport '../../assets/css/magnific-popup.css';\nimport '../../assets/css/nice-select.css';\nimport '../../assets/css/animate.min.css';\nimport '../../assets/css/main.css';\nimport './Ingredients.css';\nimport AddIngredient from './AddIngredient';\nimport IngredientService from '../../services/IngredientServices';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes, faPencilAlt, faCheck, faExclamation } from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"../../../node_modules/@fortawesome/fontawesome-svg-core\";\nimport { BrowserRouter as Router, Link, Route, Redirect } from \"react-router-dom\";\nimport HomePageNav from '../HomePageNav/HomePageNav';\nimport { getFromStorage } from \"../../utils/storage\";\nimport UserServices from \"../../services/UserServices\";\nimport { Button, Modal } from \"react-bootstrap\";\nlibrary.add(faPlus, faTimes, faPencilAlt, faCheck, faExclamation);\n\nvar Ingredients =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Ingredients, _Component);\n\n  function Ingredients(props) {\n    var _this;\n\n    _classCallCheck(this, Ingredients);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Ingredients).call(this, props));\n\n    _this.nameChanged = function (event) {\n      _this.setState({\n        updateIngredientName: event.target.value\n      });\n    };\n\n    _this.updateIngredient = function () {\n      var ingredient = {\n        name: _this.state.updateIngredientName\n      };\n\n      _this.ingredientService.updateIngredient(_this.state.updateIngredientId, ingredient).then(function () {\n        return _this.ingredientService.findIngredientsByUser(_this.state.userId);\n      }).then(function (ingredients) {\n        return _this.setState({\n          ingredients: ingredients,\n          updateIngredientName: '',\n          updateIngredientId: '',\n          updatedFieldVisibility: 'd-none'\n        });\n      }).then(function () {\n        _this.setState({\n          message: 'Ingredient Updated Successfully!',\n          messageBox: true\n        });\n      });\n    };\n\n    _this.selectForUpdate = function (ingredient) {\n      _this.setState({\n        updateIngredientName: ingredient.name,\n        updateIngredientId: ingredient._id,\n        updatedFieldVisibility: 'd-block'\n      });\n    };\n\n    _this.handleCloseMessageBox = function () {\n      _this.setState({\n        message: '',\n        messageBox: false\n      });\n\n      window.location.href = \"/ingredients\";\n    };\n\n    _this.deleteIngredient = function (ingredientId) {\n      _this.ingredientService.deleteIngredient(ingredientId).then(function () {\n        return _this.ingredientService.findIngredientsByUser(_this.state.userId);\n      }).then(function (ingredients) {\n        return _this.setState({\n          ingredients: ingredients\n        });\n      }).then(function () {\n        // alert('Ingredient Deleted Successfully!');\n        // window.location.href = `/ingredients`;\n        _this.setState({\n          message: 'Ingredient Deleted Successfully!',\n          messageBox: true\n        });\n      });\n    };\n\n    _this.ingredientService = new IngredientService();\n    var obj = getFromStorage('project_april');\n    _this.state = {\n      ingredients: [],\n      user: obj.user[0],\n      userId: obj.user[0]._id,\n      updateIngredientName: '',\n      updatedFieldVisibility: 'd-none',\n      message: '',\n      messageBox: false\n    };\n    _this.userServices = new UserServices();\n    return _this;\n  }\n\n  _createClass(Ingredients, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      document.title = \"What's Cooking?\";\n      var obj = getFromStorage('project_april');\n\n      if (obj && obj.token) {\n        var token = obj.token;\n        this.userServices.verifyUser(token).then(function (json) {\n          if (!json.success) {\n            window.location.href = '/';\n          } else if (json.success) {\n            _this2.ingredientService.findIngredientsByUser(obj.user[0]._id).then(function (ingredients) {\n              // alert(\"updated\"+courses.length)\n              console.log(ingredients);\n\n              _this2.setState({\n                ingredients: ingredients,\n                token: token,\n                user: obj.user[0],\n                userId: obj.user[0]._id\n              });\n            });\n          }\n        });\n      }\n    } // addIngredient = ingredient => {\n    //     alert('in call')\n    //     let userID = this.state.userId;\n    //     this.ingredientService.addIngredient(ingredient)\n    //         .then(() => this.ingredientService.findIngredientsByUser(this.state.userId))\n    //         .then(ingredients => this.setState({\n    //             ingredients: ingredients\n    //         }))\n    //         .then(() => <Redirect push to={`/ingredients/${userID}`}/>)\n    // }\n    // toggleModal = () => {\n    //     this.setState({\n    //         isOpen: !this.state.isOpen\n    //     });\n    //     alert(this.state.isOpen)\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var updatedName;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"about-banner relative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"overlay overlay-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row d-flex align-items-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"about-content col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-top2 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"My \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Groceries\")), React.createElement(\"p\", {\n        className: \"text-white link-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"text-white link-nav\",\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Home \"), \" \", React.createElement(\"span\", {\n        className: \"lnr lnr-arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Link, {\n        className: \"text-white link-nav\",\n        to: \"/ingredients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Ingredients\"))))))))), React.createElement(\"section\", {\n        className: \"home-about-area section-gap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mb-5 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"In Stock Groceries\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 home-about-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"table-ingredients\",\n        className: \"table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"groceries table table-bordered table-hover\",\n        id: \"grocery_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Ingredients\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.state.ingredients.map(function (ingredient) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"name-theader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, ingredient.name), React.createElement(\"td\", {\n          className: \"actions-theader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this3.selectForUpdate(ingredient);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: \"pencil-alt\",\n          className: \"fas\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        })), \"\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this3.deleteIngredient(ingredient._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: \"times\",\n          className: \"fas\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        })))));\n      }), React.createElement(\"tr\", {\n        className: \"full-width red-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"text-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(this.state.updatedFieldVisibility),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"full-width no-input-border\",\n        value: this.state.updateIngredientName,\n        onChange: this.nameChanged // ref={node => updatedName = node}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        className: \"actions-theader \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(this.state.updatedFieldVisibility),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"text-red\",\n        onClick: this.updateIngredient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"check\",\n        className: \"fas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })))))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/addIngredient\",\n        className: \"middle-div primary-btn text-uppercase mt-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Add More\")))), React.createElement(\"div\", {\n        className: \"col-lg-6 home-about-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        width: \"500px\",\n        src: require('../../assets/img/pexels-photo-1327211.jpeg'),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }))))), React.createElement(Modal, {\n        show: this.state.messageBox,\n        onHide: this.handleCloseMessageBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Yay!\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, this.state.message), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleCloseMessageBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Ok\"))));\n    }\n  }]);\n\n  return Ingredients;\n}(Component);\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/ronn/Desktop/HackUMass/StressThing/src/components/ingredients/Ingredients.js"],"names":["React","Component","AddIngredient","IngredientService","FontAwesomeIcon","faPlus","faTimes","faPencilAlt","faCheck","faExclamation","library","BrowserRouter","Router","Link","Route","Redirect","HomePageNav","getFromStorage","UserServices","Button","Modal","add","Ingredients","props","nameChanged","event","setState","updateIngredientName","target","value","updateIngredient","ingredient","name","state","ingredientService","updateIngredientId","then","findIngredientsByUser","userId","ingredients","updatedFieldVisibility","message","messageBox","selectForUpdate","_id","handleCloseMessageBox","window","location","href","deleteIngredient","ingredientId","obj","user","userServices","document","title","token","verifyUser","json","success","console","log","updatedName","color","map","require"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport '../../assets/css/linearicons.css'\nimport '../../assets/css/magnific-popup.css'\nimport '../../assets/css/nice-select.css'\nimport '../../assets/css/animate.min.css'\nimport '../../assets/css/main.css'\nimport './Ingredients.css'\nimport AddIngredient from './AddIngredient'\nimport IngredientService from '../../services/IngredientServices'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlus, faTimes, faPencilAlt, faCheck, faExclamation} from \"@fortawesome/free-solid-svg-icons\";\nimport {library} from \"../../../node_modules/@fortawesome/fontawesome-svg-core\";\nimport {BrowserRouter as Router, Link, Route, Redirect} from \"react-router-dom\";\nimport HomePageNav from '../HomePageNav/HomePageNav'\nimport {getFromStorage} from \"../../utils/storage\";\nimport UserServices from \"../../services/UserServices\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nlibrary.add(faPlus, faTimes, faPencilAlt, faCheck, faExclamation);\n\nclass Ingredients extends Component {\n    constructor(props) {\n        super(props);\n        this.ingredientService = new IngredientService();\n        const obj = getFromStorage('project_april');\n        this.state = {\n            ingredients: [],\n            user: obj.user[0],\n            userId: obj.user[0]._id,\n            updateIngredientName: '',\n            updatedFieldVisibility: 'd-none',\n            message: '',\n            messageBox: false\n        };\n        this.userServices = new UserServices();\n    }\n\n    componentWillMount() {\n        document.title = \"What's Cooking?\";\n        const obj = getFromStorage('project_april');\n        if (obj && obj.token) {\n            const { token } = obj;\n            this.userServices.verifyUser(token).then(json => {\n                if(!json.success){\n                    window.location.href='/';\n                }\n                else if (json.success) {\n                    this.ingredientService.findIngredientsByUser(obj.user[0]._id)\n                        .then(ingredients => {\n                            // alert(\"updated\"+courses.length)\n                            console.log(ingredients);\n                            this.setState({\n                                ingredients: ingredients,\n                                token,\n                                user: obj.user[0],\n                                userId: obj.user[0]._id\n                            })\n                        });\n                }\n            });\n        }\n    }\n\n    // addIngredient = ingredient => {\n    //     alert('in call')\n    //     let userID = this.state.userId;\n    //     this.ingredientService.addIngredient(ingredient)\n    //         .then(() => this.ingredientService.findIngredientsByUser(this.state.userId))\n    //         .then(ingredients => this.setState({\n    //             ingredients: ingredients\n    //         }))\n    //         .then(() => <Redirect push to={`/ingredients/${userID}`}/>)\n    // }\n\n    // toggleModal = () => {\n    //     this.setState({\n    //         isOpen: !this.state.isOpen\n    //     });\n    //     alert(this.state.isOpen)\n    // }\n\n    nameChanged = (event) => {\n        this.setState(\n            {\n                updateIngredientName: event.target.value\n            });\n    };\n\n    updateIngredient = () => {\n        let ingredient = {\n            name: this.state.updateIngredientName\n        };\n        this.ingredientService.updateIngredient(this.state.updateIngredientId, ingredient)\n            .then(() => this.ingredientService.findIngredientsByUser(this.state.userId))\n            .then(ingredients =>\n                this.setState({\n                    ingredients: ingredients,\n                    updateIngredientName: '',\n                    updateIngredientId: '',\n                    updatedFieldVisibility: 'd-none'\n                }))\n            .then(() => {\n                this.setState({\n                    message: 'Ingredient Updated Successfully!',\n                    messageBox: true});\n\n            });\n    }\n\n    selectForUpdate = (ingredient) => {\n        this.setState({\n            updateIngredientName: ingredient.name,\n            updateIngredientId: ingredient._id,\n            updatedFieldVisibility: 'd-block'\n        });\n    };\n\n    handleCloseMessageBox = () => {\n        this.setState({\n            message: '',\n            messageBox: false});\n\n        window.location.href = `/ingredients`\n    };\n\n    deleteIngredient = (ingredientId) => {\n        this.ingredientService.deleteIngredient(ingredientId)\n            .then(() => this.ingredientService.findIngredientsByUser(this.state.userId))\n            .then(ingredients =>\n                this.setState({\n                    ingredients: ingredients\n                }))\n            .then(() => {\n                // alert('Ingredient Deleted Successfully!');\n                // window.location.href = `/ingredients`;\n                this.setState({\n                    message: 'Ingredient Deleted Successfully!',\n                    messageBox: true});\n            });\n    }\n\n    render() {\n        let updatedName;\n        return (\n            <div>\n                <div id=\"header\">\n                    {/*<HomePageNav/>*/}\n                </div>\n                <section className=\"about-banner relative\">\n                    <div className=\"overlay overlay-bg\"></div>\n                    <div className=\"container\">\n                        <div className=\"row d-flex align-items-center justify-content-center\">\n                            <div className=\"about-content col-lg-12\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-12\">\n                                        <div className=\"section-top2 text-center\">\n                                            <h3 style={{color:\"white\"}}>My <span>Groceries</span></h3>\n                                            <p className=\"text-white link-nav\"><Link className=\"text-white link-nav\" to='/home'>Home </Link> <span\n                                                className=\"lnr lnr-arrow-right\"></span>\n                                                <Link className=\"text-white link-nav\" to={`/ingredients`}>Ingredients</Link>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"home-about-area section-gap\">\n                    <div className=\"container\">\n                        <h1 className=\"mb-5 text-center\">In Stock Groceries</h1>\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 home-about-left\">\n                                <div id=\"table-ingredients\" className=\"table-responsive\">\n                                    <table className=\"groceries table table-bordered table-hover\"\n                                           id=\"grocery_table\">\n                                        <thead>\n                                        <tr>\n                                            <th>Ingredients</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.state.ingredients.map(ingredient =>\n                                            <tr>\n                                                <td className=\"name-theader\">{ingredient.name}</td>\n                                                <td className=\"actions-theader\"><span><a\n                                                    onClick={() => this.selectForUpdate(ingredient)}><FontAwesomeIcon\n                                                    icon=\"pencil-alt\"\n                                                    className=\"fas\"/></a>\n                                                    &nbsp;&nbsp;&nbsp;&nbsp;<a\n                                                        onClick={() => this.deleteIngredient(ingredient._id)}>\n                                                        <FontAwesomeIcon icon=\"times\"\n                                                                         className=\"fas\"/></a></span>\n                                                </td>\n                                            </tr>\n                                        )}\n                                        <tr className=\"full-width red-border\">\n                                            <td className=\"text-red\">\n                                                <div className={`${this.state.updatedFieldVisibility}`}>\n                                                    <input className='full-width no-input-border'\n                                                           value={this.state.updateIngredientName}\n                                                           onChange={this.nameChanged}\n                                                        // ref={node => updatedName = node}\n                                                    ></input>\n                                                </div>\n                                            </td>\n                                            <td className=\"actions-theader \">\n                                                <div className={`${this.state.updatedFieldVisibility}`}><span>\n                                                <a className=\"text-red\" onClick={this.updateIngredient}>\n                                                <FontAwesomeIcon\n                                                    icon=\"check\"\n                                                    className=\"fas\"/></a></span>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                    {/*<div className={`${this.state.updatedFieldVisibility}`}>*/}\n                                    {/*<input*/}\n                                    {/*value={this.state.updateIngredientName}*/}\n                                    {/*ref={node => updatedName = node}></input>*/}\n                                    {/*</div>*/}\n                                    <div className='row'>\n                                        <Link to='/addIngredient'\n                                              className='middle-div primary-btn text-uppercase mt-20'>\n                                            Add More</Link>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-6 home-about-right\">\n                                <img width=\"500px\" src={require('../../assets/img/pexels-photo-1327211.jpeg')} alt=\"\"/>\n                            </div>\n\n                        </div>\n                    </div>\n                </section>\n                <Modal show={this.state.messageBox} onHide={this.handleCloseMessageBox}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Yay!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>{this.state.message}</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={this.handleCloseMessageBox}>\n                            Ok\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n        );\n    }\n\n\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}