{"ast":null,"code":"import _classCallCheck from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { FETCH_URL } from \"../utils/constants\";\n\nvar UserServices = function UserServices() {\n  _classCallCheck(this, UserServices);\n\n  this.checkUserNameValidity = function (uname) {\n    return fetch(FETCH_URL + 'username/' + uname).then(function (res) {\n      return res.json();\n    });\n  };\n\n  this.verifyUser = function (token) {\n    return fetch(FETCH_URL + 'account/verify?token=' + token).then(function (res) {\n      return res.json();\n    });\n  };\n\n  this.getProfile = function () {\n    return fetch(FETCH_URL + 'profile').then(function (res) {\n      return res.json();\n    });\n  };\n\n  this.updateProfile = function (user) {\n    return fetch(FETCH_URL + \"user/\" + user._id, {\n      method: 'put',\n      body: JSON.stringify(user),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.loginUser = function (username, password) {\n    return fetch(FETCH_URL + 'login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(function (res) {\n      return res.json();\n    });\n  };\n\n  this.logOutUser = function (token) {\n    return fetch(FETCH_URL + 'logout?token=' + token).then(function (res) {\n      return res.json();\n    });\n  };\n\n  this.findById = function (userID) {\n    return fetch(FETCH_URL + 'user/' + userID).then(function (response) {\n      return response.json();\n    });\n  };\n};\n\nexport { UserServices as default };","map":{"version":3,"sources":["/Users/ronn/Desktop/HackUMass/StressThing/src/services/UserServices.js"],"names":["FETCH_URL","UserServices","checkUserNameValidity","uname","fetch","then","res","json","verifyUser","token","getProfile","updateProfile","user","_id","method","body","JSON","stringify","headers","response","loginUser","username","password","logOutUser","findById","userID"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,oBAAxB;;IAEqBC,Y;;;OACjBC,qB,GAAwB,UAACC,KAAD,EAAW;AAC/B,WAAOC,KAAK,CAACJ,SAAS,GAAG,WAAZ,GAA0BG,KAA3B,CAAL,CACFE,IADE,CACG,UAAAC,GAAG,EAAI;AACL,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHF,CAAP;AAKH,G;;OAEDC,U,GAAa,UAACC,KAAD,EAAW;AACpB,WAAOL,KAAK,CAACJ,SAAS,GAAG,uBAAZ,GAAsCS,KAAvC,CAAL,CACFJ,IADE,CACG,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADN,CAAP;AAEH,G;;OACDG,U,GAAa,YAAM;AACf,WAAON,KAAK,CAACJ,SAAS,GAAG,SAAb,CAAL,CACFK,IADE,CACG,UAAAC,GAAG,EAAI;AACL,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHF,CAAP;AAKH,G;;OAEDI,a,GAAgB,UAACC,IAAD;AAAA,WACZR,KAAK,CAACJ,SAAS,GAAC,OAAV,GAAkBY,IAAI,CAACC,GAAxB,EAA6B;AAC9BC,MAAAA,MAAM,EAAG,KADqB;AAE9BC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFuB;AAG9BM,MAAAA,OAAO,EAAG;AACN,wBAAiB;AADX;AAHoB,KAA7B,CAAL,CAOGb,IAPH,CAOQ,UAAAc,QAAQ,EAAG;AACX,aAAOA,QAAQ,CAACZ,IAAT,EAAP;AACP,KATD,CADY;AAAA,G;;OAYhBa,S,GAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAChC,WAAOlB,KAAK,CAACJ,SAAS,GAAG,OAAb,EAAsB;AAC9Bc,MAAAA,MAAM,EAAE,MADsB;AAE9BI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFqB;AAK9BH,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBI,QAAAA,QAAQ,EAAEA,QADO;AAEjBC,QAAAA,QAAQ,EAAEA;AAFO,OAAf;AALwB,KAAtB,CAAL,CASJjB,IATI,CASC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KATJ,CAAP;AAUH,G;;OAEDgB,U,GAAa,UAACd,KAAD,EAAW;AACpB,WAAOL,KAAK,CAACJ,SAAS,GAAG,eAAZ,GAA8BS,KAA/B,CAAL,CACFJ,IADE,CACG,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADN,CAAP;AAEH,G;;OAEDiB,Q,GAAW,UAAAC,MAAM,EAAI;AACjB,WAAOrB,KAAK,CAACJ,SAAS,GAAG,OAAZ,GAAsByB,MAAvB,CAAL,CACFpB,IADE,CACG,UAAAc,QAAQ;AAAA,aAAIA,QAAQ,CAACZ,IAAT,EAAJ;AAAA,KADX,CAAP;AAEH,G;;;SAtDgBN,Y","sourcesContent":["import {FETCH_URL} from \"../utils/constants\";\n\nexport default class UserServices {\n    checkUserNameValidity = (uname) => {\n        return fetch(FETCH_URL + 'username/' + uname)\n            .then(res => {\n                    return res.json();\n                }\n            );\n    };\n\n    verifyUser = (token) => {\n        return fetch(FETCH_URL + 'account/verify?token=' + token)\n            .then(res => res.json());\n    }\n    getProfile = () => {\n        return fetch(FETCH_URL + 'profile')\n            .then(res => {\n                    return res.json();\n                }\n            );\n    };\n\n    updateProfile = (user) =>\n        fetch(FETCH_URL+\"user/\"+user._id, {\n            method : 'put',\n            body : JSON.stringify(user),\n            headers : {\n                'content-type' : 'application/json'\n            }\n\n        }).then(response=> {\n                return response.json()\n        })\n\n    loginUser = (username, password) => {\n        return fetch(FETCH_URL + 'login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password,\n            }),\n        }).then(res => res.json());\n    };\n\n    logOutUser = (token) => {\n        return fetch(FETCH_URL + 'logout?token=' + token)\n            .then(res => res.json());\n    }\n\n    findById = userID => {\n        return fetch(FETCH_URL + 'user/' + userID)\n            .then(response => response.json());\n    }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}