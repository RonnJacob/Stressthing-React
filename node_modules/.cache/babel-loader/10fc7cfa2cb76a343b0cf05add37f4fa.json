{"ast":null,"code":"import _classCallCheck from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { FETCH_URL } from \"../utils/constants\";\n\nvar NutritionistServices = function NutritionistServices() {\n  _classCallCheck(this, NutritionistServices);\n\n  this.registerNutritionist = function (nutritionist) {\n    return fetch(FETCH_URL + 'registerNutritionist', {\n      method: 'post',\n      body: JSON.stringify(nutritionist),\n      headers: {\n        'content-type': 'application/json'\n      },\n      credentials: \"same-origin\"\n    }).then(function (res) {\n      return console.log(res);\n    });\n  };\n\n  this.findById = function (userID) {\n    return fetch(FETCH_URL + 'nutritionist/' + userID).then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.endorseRecipe = function (userId, recipeId) {\n    return fetch(FETCH_URL + 'nutritionist/' + userId + '/recipes/' + recipeId, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n\n  this.removeEndorsed = function (userId, recipeId) {\n    return fetch(FETCH_URL + 'nutritionist/' + userId + '/recipes/' + recipeId, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n\n  this.updateProfile = function (nutritionist, _id) {\n    return fetch(FETCH_URL + \"nutritionist/\" + _id, {\n      method: 'put',\n      body: JSON.stringify(nutritionist),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.findEndorsedRecipes = function (userID) {\n    return fetch(FETCH_URL + 'nutritionist/' + userID + '/recipes').then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.findEndorsedRecipeId = function (userID) {\n    return fetch(FETCH_URL + 'nutritionist/' + userID + '/recipeId').then(function (response) {\n      return response.json();\n    });\n  };\n};\n\nexport { NutritionistServices as default };","map":{"version":3,"sources":["/Users/ronn/Desktop/HackUMass/StressThing/src/services/NutritionistServices.js"],"names":["FETCH_URL","NutritionistServices","registerNutritionist","nutritionist","fetch","method","body","JSON","stringify","headers","credentials","then","res","console","log","findById","userID","response","json","endorseRecipe","userId","recipeId","removeEndorsed","updateProfile","_id","findEndorsedRecipes","findEndorsedRecipeId"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,oBAAxB;;IAEqBC,oB;;;OACjBC,oB,GAAuB,UAACC,YAAD,EAAkB;AACrC,WAAOC,KAAK,CAACJ,SAAS,GAAG,sBAAb,EAAqC;AAC7CK,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAFuC;AAG7CM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHoC;AAM7CC,MAAAA,WAAW,EAAE;AANgC,KAArC,CAAL,CAOJC,IAPI,CAOC,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAPJ,CAAP;AAQH,G;;OAEDG,Q,GAAW,UAAAC,MAAM;AAAA,WAAIZ,KAAK,CAACJ,SAAS,GAAG,eAAZ,GAA8BgB,MAA/B,CAAL,CAChBL,IADgB,CACX,UAAAM,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADG,CAAJ;AAAA,G;;OAGjBC,a,GAAgB,UAACC,MAAD,EAASC,QAAT,EAAsB;AAClC,WAAOjB,KAAK,CAACJ,SAAS,GAAG,eAAZ,GAA8BoB,MAA9B,GAAuC,WAAvC,GAAqDC,QAAtD,EAAgE;AACxEhB,MAAAA,MAAM,EAAE,MADgE;AAExEI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAF+D,KAAhE,CAAZ;AAMH,G;;OAEDa,c,GAAiB,UAACF,MAAD,EAASC,QAAT,EAAsB;AACnC,WAAOjB,KAAK,CAACJ,SAAS,GAAG,eAAZ,GAA8BoB,MAA9B,GAAuC,WAAvC,GAAqDC,QAAtD,EAAgE;AACxEhB,MAAAA,MAAM,EAAE,QADgE;AAExEI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAF+D,KAAhE,CAAZ;AAMH,G;;OAEDc,a,GAAgB,UAACpB,YAAD,EAAcqB,GAAd;AAAA,WACZpB,KAAK,CAACJ,SAAS,GAAC,eAAV,GAA0BwB,GAA3B,EAAgC;AACjCnB,MAAAA,MAAM,EAAG,KADwB;AAEjCC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAF0B;AAGjCM,MAAAA,OAAO,EAAG;AACN,wBAAiB;AADX;AAHuB,KAAhC,CAAL,CAOGE,IAPH,CAOQ,UAAAM,QAAQ,EAAG;AACf,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KATD,CADY;AAAA,G;;OAahBO,mB,GAAsB,UAACT,MAAD,EAAY;AAC9B,WAAOZ,KAAK,CAACJ,SAAS,GAAG,eAAZ,GAA8BgB,MAA9B,GAAqC,UAAtC,CAAL,CACFL,IADE,CACG,UAASM,QAAT,EAAkB;AACpB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHE,CAAP;AAKH,G;;OACDQ,oB,GAAuB,UAACV,MAAD,EAAY;AAC/B,WAAOZ,KAAK,CAACJ,SAAS,GAAG,eAAZ,GAA8BgB,MAA9B,GAAqC,WAAtC,CAAL,CACFL,IADE,CACG,UAASM,QAAT,EAAkB;AACpB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHE,CAAP;AAIH,G;;;SA1DgBjB,oB","sourcesContent":["import {FETCH_URL} from \"../utils/constants\";\n\nexport default class NutritionistServices {\n    registerNutritionist = (nutritionist) => {\n        return fetch(FETCH_URL + 'registerNutritionist', {\n            method: 'post',\n            body: JSON.stringify(nutritionist),\n            headers: {\n                'content-type': 'application/json'\n            },\n            credentials: \"same-origin\"\n        }).then(res => console.log(res));\n    };\n\n    findById = userID => fetch(FETCH_URL + 'nutritionist/' + userID)\n        .then(response => response.json());\n\n    endorseRecipe = (userId, recipeId) => {\n        return fetch(FETCH_URL + 'nutritionist/' + userId + '/recipes/' + recipeId, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n    };\n\n    removeEndorsed = (userId, recipeId) => {\n        return fetch(FETCH_URL + 'nutritionist/' + userId + '/recipes/' + recipeId, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n    };\n\n    updateProfile = (nutritionist,_id) =>\n        fetch(FETCH_URL+\"nutritionist/\"+_id, {\n            method : 'put',\n            body : JSON.stringify(nutritionist),\n            headers : {\n                'content-type' : 'application/json'\n            }\n\n        }).then(response=> {\n            return response.json()\n        })\n\n\n    findEndorsedRecipes = (userID) => {\n        return fetch(FETCH_URL + 'nutritionist/' + userID+'/recipes')\n            .then(function(response){\n                return response.json();\n            });\n\n    }\n    findEndorsedRecipeId = (userID) => {\n        return fetch(FETCH_URL + 'nutritionist/' + userID+'/recipeId')\n            .then(function(response){\n                return response.json();\n            });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}