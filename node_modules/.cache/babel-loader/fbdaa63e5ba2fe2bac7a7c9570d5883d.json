{"ast":null,"code":"import _classCallCheck from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ronn/Desktop/HackUMass/StressThing/src/components/ingredients/AddIngredient.js\";\nimport React from 'react'; // import './Ingredients.css'\n\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons';\nimport { getFromStorage } from \"../../utils/storage\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport UserServices from \"../../services/UserServices\";\n\nvar AddIngredient =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddIngredient, _React$Component);\n\n  function AddIngredient(props) {\n    var _this;\n\n    _classCallCheck(this, AddIngredient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddIngredient).call(this, props));\n\n    _this.addIngredient = function (ingredient) {\n      if (ingredient.name.length < 1) {\n        _this.setState({\n          error: 'Please enter an ingredient'\n        });\n      } else {\n        _this.setState({\n          addSuccessful: true,\n          ingredientToBeSaved: ingredient\n        });\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.props.addIngredient(_this.state.ingredientToBeSaved).then(function () {\n        return _this.setState({\n          addSuccessful: false\n        });\n      });\n    };\n\n    _this.state = {\n      error: '',\n      addSuccessful: false,\n      ingredientToBeSaved: {}\n    };\n    _this.userServices = new UserServices();\n    return _this;\n  } // componentWillMount() {\n  //     document.title = \"What's Cooking?\";\n  //     const obj = getFromStorage('project_april');\n  //     if (obj && obj.token) {\n  //         const { token } = obj;\n  //         this.userServices.verifyUser(token).then(json => {\n  //             if(!json.success){\n  //                 window.location.href='/';\n  //             }\n  //         });\n  //     }\n  // }\n\n\n  _createClass(AddIngredient, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var name;\n      var obj = getFromStorage('project_april');\n      var userId = obj.user[0]._id;\n      library.add(faExclamation);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"about-banner relative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"overlay overlay-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row d-flex align-items-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"about-content col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Groceries\"), React.createElement(\"p\", {\n        className: \"text-white link-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Home\"), \" \", React.createElement(\"span\", {\n        className: \"lnr lnr-arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/ingredients/\".concat(userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Ingredients\"), React.createElement(\"span\", {\n        className: \"lnr lnr-arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Add Ingredient\")))))), React.createElement(\"section\", {\n        className: \"home-about-area section-gap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mb-5 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Add Ingredient\"), this.state.error && React.createElement(\"p\", {\n        className: \"form-errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"form-error-icons\",\n        icon: \"exclamation\",\n        style: {\n          color: '#F47D41'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), \"\\xA0\\xA0\", this.state.error), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 home-about-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"modal-title\",\n        id: \"exampleModalLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Add Ingredients\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return window.location.href = '/ingredients';\n        },\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"add_ingredients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"ingredient_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Ingredient Name: \"), React.createElement(\"input\", {\n        ref: function ref(node) {\n          return name = node;\n        },\n        type: \"text\",\n        className: \"form-control\",\n        id: \"ingredient_name\",\n        \"aria-describedby\": \"recipeHelp\",\n        placeholder: \"Enter Ingredient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"middle-div btn btn-primary\",\n        id: \"save_recipe\",\n        onClick: function onClick() {\n          var ingredient = {\n            name: name.value,\n            ownedBy: userId\n          };\n\n          _this2.addIngredient(ingredient);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Save changes\"), React.createElement(Link, {\n        to: \"/ingredients\",\n        className: \"middle-div btn btn-danger\",\n        id: \"save_recipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Cancel\")))), React.createElement(\"div\", {\n        className: \"col-lg-6 home-about-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('./add-img.jpg'),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))))), React.createElement(Modal, {\n        show: this.state.addSuccessful,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Yay\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Ingredient has been added.\"), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Ok\"))));\n    }\n  }]);\n\n  return AddIngredient;\n}(React.Component); // const AddIngredient = ({addIngredient}) => {\n//     let name;\n//     const obj = getFromStorage('project_april');\n//     const userId = obj.user[0]._id;\n//     return (\n//         <div>\n//             <div id=\"header\">\n//                 {/*<HomePageNav/>*/}\n//             </div>\n//             <section className=\"about-banner relative\">\n//                 <div className=\"overlay overlay-bg\"></div>\n//                 <div className=\"container\">\n//                     <div className=\"row d-flex align-items-center justify-content-center\">\n//                         <div className=\"about-content col-lg-12\">\n//                             <h1 className=\"text-white\">\n//                                 Groceries\n//                             </h1>\n//                             <p className=\"text-white link-nav\"><a href='/home'>Home</a> <span\n//                                 className=\"lnr lnr-arrow-right\"></span>\n//                                 <Link to={`/ingredients/${userId}`}>Ingredients</Link>\n//                                 <span\n//                                     className=\"lnr lnr-arrow-right\"></span>\n//                                 <a href=\"#\">Add Ingredient</a>\n//                             </p>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </section>\n//             <section className=\"home-about-area section-gap\">\n//                 <div className=\"container\">\n//                     <h1 className=\"mb-5 text-center\">Add Ingredient</h1>\n//                     <div className=\"row\">\n//                         <div className=\"col-lg-6 home-about-left\">\n//                             <div className=\"modal-content\">\n//                                 <div className=\"modal-header\">\n//                                     <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Ingredients</h5>\n//                                     <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n//                                         <span aria-hidden=\"true\">&times;</span>\n//                                     </button>\n//                                 </div>\n//                                 <div className=\"modal-body\">\n//                                     <form id=\"add_ingredients\">\n//                                         <div className=\"form-group\">\n//                                             <label htmlFor=\"ingredient_name\">Ingredient Name: </label>\n//                                             <input ref={node => name = node} type=\"text\" className=\"form-control\"\n//                                                    id=\"ingredient_name\"\n//                                                    aria-describedby=\"recipeHelp\" placeholder=\"Enter Ingredient\"/>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                                 <div className=\"modal-footer\">\n//                                     <button className=\"middle-div btn btn-primary\" id=\"save_recipe\"\n//                                             onClick={() => {\n//                                                 addIngredient({\n//                                                     name: name.value,\n//                                                     ownedBy: userId\n//                                                 })\n//                                             }}>Save changes\n//                                     </button>\n//                                     <Link to='/ingredients' className=\"middle-div btn btn-danger\"\n//                                           id=\"save_recipe\">Cancel\n//                                     </Link>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         <div className=\"col-lg-6 home-about-right\">\n//                             <img src={require('./add-img.jpg')} alt=\"\"/>\n//                         </div>\n//\n//                     </div>\n//                 </div>\n//             </section>\n//             <footer className=\"footer-area\">\n//                 <div className=\"footer-bottom-wrap\">\n//                     <div className=\"container\">\n//                         <div className=\"row footer-bottom d-flex justify-content-between align-items-center\">\n//                             <p className=\"col-lg-8 col-mdcol-sm-6 -6 footer-text m-0\">\n//                                 Copyright &copy;\n//                                 <script>document.write(new Date().getFullYear());</script>\n//                             </p>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </footer>\n//         </div>\n//     )\n// }\n\n\nexport default AddIngredient;","map":{"version":3,"sources":["/Users/ronn/Desktop/HackUMass/StressThing/src/components/ingredients/AddIngredient.js"],"names":["React","BrowserRouter","Router","Link","Route","FontAwesomeIcon","library","faExclamation","getFromStorage","Button","Modal","UserServices","AddIngredient","props","addIngredient","ingredient","name","length","setState","error","addSuccessful","ingredientToBeSaved","handleClose","state","then","userServices","obj","userId","user","_id","add","color","window","location","href","node","value","ownedBy","require","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n// import './Ingredients.css'\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons'\nimport {getFromStorage} from \"../../utils/storage\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport UserServices from \"../../services/UserServices\";\n\nclass AddIngredient extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            error: '',\n            addSuccessful: false,\n            ingredientToBeSaved: {}\n        };\n        this.userServices = new UserServices();\n    }\n\n\n    // componentWillMount() {\n    //     document.title = \"What's Cooking?\";\n    //     const obj = getFromStorage('project_april');\n    //     if (obj && obj.token) {\n    //         const { token } = obj;\n    //         this.userServices.verifyUser(token).then(json => {\n    //             if(!json.success){\n    //                 window.location.href='/';\n    //             }\n    //         });\n    //     }\n    // }\n    addIngredient = (ingredient) => {\n        if(ingredient.name.length < 1){\n            this.setState({\n                error: 'Please enter an ingredient'\n            })\n        }\n        else{\n            this.setState({\n                addSuccessful: true,\n                ingredientToBeSaved: ingredient\n            })\n        }\n    };\n\n    handleClose = () => {\n\n        this.props.addIngredient(this.state.ingredientToBeSaved)\n            .then(()=>this.setState({\n                addSuccessful: false,\n            }));\n\n    };\n\n    render(){\n        let name;\n        const obj = getFromStorage('project_april');\n        const userId = obj.user[0]._id;\n        library.add(faExclamation);\n        return(\n            <div>\n                <div id=\"header\">\n                    {/*<HomePageNav/>*/}\n                </div>\n                <section className=\"about-banner relative\">\n                    <div className=\"overlay overlay-bg\"></div>\n                    <div className=\"container\">\n                        <div className=\"row d-flex align-items-center justify-content-center\">\n                            <div className=\"about-content col-lg-12\">\n                                <h1 className=\"text-white\">\n                                    Groceries\n                                </h1>\n                                <p className=\"text-white link-nav\"><a href='/home'>Home</a> <span\n                                    className=\"lnr lnr-arrow-right\"></span>\n                                    <Link to={`/ingredients/${userId}`}>Ingredients</Link>\n                                    <span\n                                        className=\"lnr lnr-arrow-right\"></span>\n                                    <a href=\"#\">Add Ingredient</a>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"home-about-area section-gap\">\n                    <div className=\"container\">\n                        <h1 className=\"mb-5 text-center\">Add Ingredient</h1>\n                        {(this.state.error) &&\n                        <p className=\"form-errors\">\n                            <FontAwesomeIcon className=\"form-error-icons\" icon=\"exclamation\"\n                                             style={{color: '#F47D41'}}/>\n                            &nbsp;&nbsp;{this.state.error}\n                        </p>\n                        }\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 home-about-left\">\n                                <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Ingredients</h5>\n                                        <button type=\"button\"\n                                                onClick={()=>window.location.href='/ingredients'}\n                                                className=\"close\"\n                                                data-dismiss=\"modal\"\n                                                aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                        <form id=\"add_ingredients\">\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"ingredient_name\">Ingredient Name: </label>\n                                                <input ref={node => name = node} type=\"text\" className=\"form-control\"\n                                                       id=\"ingredient_name\"\n                                                       aria-describedby=\"recipeHelp\" placeholder=\"Enter Ingredient\"/>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div className=\"modal-footer\">\n                                        <button className=\"middle-div btn btn-primary\" id=\"save_recipe\"\n                                                onClick={() => {\n                                                    let ingredient= {name: name.value, ownedBy: userId};\n                                                    this.addIngredient(ingredient)\n                                                }}>Save changes\n                                        </button>\n                                        <Link to='/ingredients' className=\"middle-div btn btn-danger\"\n                                              id=\"save_recipe\">Cancel\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-6 home-about-right\">\n                                <img src={require('./add-img.jpg')} alt=\"\"/>\n                            </div>\n\n                        </div>\n                    </div>\n                </section>\n                <Modal show={this.state.addSuccessful} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Yay</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Ingredient has been added.</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={this.handleClose}>\n                            Ok\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n\n}\n// const AddIngredient = ({addIngredient}) => {\n//     let name;\n//     const obj = getFromStorage('project_april');\n//     const userId = obj.user[0]._id;\n//     return (\n//         <div>\n//             <div id=\"header\">\n//                 {/*<HomePageNav/>*/}\n//             </div>\n//             <section className=\"about-banner relative\">\n//                 <div className=\"overlay overlay-bg\"></div>\n//                 <div className=\"container\">\n//                     <div className=\"row d-flex align-items-center justify-content-center\">\n//                         <div className=\"about-content col-lg-12\">\n//                             <h1 className=\"text-white\">\n//                                 Groceries\n//                             </h1>\n//                             <p className=\"text-white link-nav\"><a href='/home'>Home</a> <span\n//                                 className=\"lnr lnr-arrow-right\"></span>\n//                                 <Link to={`/ingredients/${userId}`}>Ingredients</Link>\n//                                 <span\n//                                     className=\"lnr lnr-arrow-right\"></span>\n//                                 <a href=\"#\">Add Ingredient</a>\n//                             </p>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </section>\n//             <section className=\"home-about-area section-gap\">\n//                 <div className=\"container\">\n//                     <h1 className=\"mb-5 text-center\">Add Ingredient</h1>\n//                     <div className=\"row\">\n//                         <div className=\"col-lg-6 home-about-left\">\n//                             <div className=\"modal-content\">\n//                                 <div className=\"modal-header\">\n//                                     <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Ingredients</h5>\n//                                     <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n//                                         <span aria-hidden=\"true\">&times;</span>\n//                                     </button>\n//                                 </div>\n//                                 <div className=\"modal-body\">\n//                                     <form id=\"add_ingredients\">\n//                                         <div className=\"form-group\">\n//                                             <label htmlFor=\"ingredient_name\">Ingredient Name: </label>\n//                                             <input ref={node => name = node} type=\"text\" className=\"form-control\"\n//                                                    id=\"ingredient_name\"\n//                                                    aria-describedby=\"recipeHelp\" placeholder=\"Enter Ingredient\"/>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                                 <div className=\"modal-footer\">\n//                                     <button className=\"middle-div btn btn-primary\" id=\"save_recipe\"\n//                                             onClick={() => {\n//                                                 addIngredient({\n//                                                     name: name.value,\n//                                                     ownedBy: userId\n//                                                 })\n//                                             }}>Save changes\n//                                     </button>\n//                                     <Link to='/ingredients' className=\"middle-div btn btn-danger\"\n//                                           id=\"save_recipe\">Cancel\n//                                     </Link>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         <div className=\"col-lg-6 home-about-right\">\n//                             <img src={require('./add-img.jpg')} alt=\"\"/>\n//                         </div>\n//\n//                     </div>\n//                 </div>\n//             </section>\n//             <footer className=\"footer-area\">\n//                 <div className=\"footer-bottom-wrap\">\n//                     <div className=\"container\">\n//                         <div className=\"row footer-bottom d-flex justify-content-between align-items-center\">\n//                             <p className=\"col-lg-8 col-mdcol-sm-6 -6 footer-text m-0\">\n//                                 Copyright &copy;\n//                                 <script>document.write(new Date().getFullYear());</script>\n//                             </p>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </footer>\n//         </div>\n//     )\n// }\n\n\nexport default AddIngredient\n"]},"metadata":{},"sourceType":"module"}