{"ast":null,"code":"import _classCallCheck from \"/Users/ronn/Desktop/HackUMass/StressThing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { FETCH_URL } from \"../utils/constants\";\n\nvar IngredientServices = function IngredientServices() {\n  _classCallCheck(this, IngredientServices);\n\n  this.findIngredientsByUser = function (userId) {\n    return fetch(FETCH_URL + 'users/' + userId + '/ingredients').then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.addIngredient = function (ingredient) {\n    return fetch(FETCH_URL + 'ingredient', {\n      method: 'post',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.deleteIngredient = function (ingredientId) {\n    return fetch(FETCH_URL + 'ingredients/' + ingredientId, {\n      method: 'delete',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  };\n\n  this.updateIngredient = function (ingredientId, ingredient) {\n    return fetch(FETCH_URL + 'ingredients/' + ingredientId, {\n      method: 'put',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  };\n};\n\nexport { IngredientServices as default };","map":{"version":3,"sources":["/Users/ronn/Desktop/HackUMass/StressThing/src/services/IngredientServices.js"],"names":["FETCH_URL","IngredientServices","findIngredientsByUser","userId","fetch","then","response","json","addIngredient","ingredient","method","body","JSON","stringify","headers","deleteIngredient","ingredientId","updateIngredient"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,oBAAxB;;IAEqBC,kB;;;OACjBC,qB,GAAwB,UAAAC,MAAM;AAAA,WAC1BC,KAAK,CAACJ,SAAS,GAAG,QAAZ,GAAuBG,MAAvB,GAAgC,cAAjC,CAAL,CAAsDE,IAAtD,CAA2D,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAAnE,CAD0B;AAAA,G;;OAG9BC,a,GAAgB,UAAAC,UAAU;AAAA,WAAIL,KAAK,CAACJ,SAAS,GAAG,YAAb,EAA2B;AAC1DU,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAFoD;AAG1DK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHiD,KAA3B,CAAL,CAM3BT,IAN2B,CAMtB,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KANc,CAAJ;AAAA,G;;OAQ1BQ,gB,GAAmB,UAAAC,YAAY;AAAA,WAAIZ,KAAK,CAACJ,SAAS,GAAG,cAAZ,GAA6BgB,YAA9B,EAA4C;AAChFN,MAAAA,MAAM,EAAE,QADwE;AAEhFI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFuE,KAA5C,CAAT;AAAA,G;;OAO/BG,gB,GAAmB,UAACD,YAAD,EAAeP,UAAf;AAAA,WAA8BL,KAAK,CAACJ,SAAS,GAAG,cAAZ,GAA6BgB,YAA9B,EAA4C;AAC9FN,MAAAA,MAAM,EAAE,KADsF;AAE9FC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAFwF;AAG9FK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHqF,KAA5C,CAAnC;AAAA,G;;;SAnBFb,kB","sourcesContent":["import {FETCH_URL} from \"../utils/constants\";\n\nexport default class IngredientServices {\n    findIngredientsByUser = userId =>\n        fetch(FETCH_URL + 'users/' + userId + '/ingredients').then(response => response.json());\n\n    addIngredient = ingredient => fetch(FETCH_URL + 'ingredient', {\n        method: 'post',\n        body: JSON.stringify(ingredient),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => response.json());\n\n    deleteIngredient = ingredientId => fetch(FETCH_URL + 'ingredients/' + ingredientId, {\n        method: 'delete',\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n\n    updateIngredient = (ingredientId, ingredient) => fetch(FETCH_URL + 'ingredients/' + ingredientId, {\n        method: 'put',\n        body: JSON.stringify(ingredient),\n        headers: {\n            'content-type': 'application/json'\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}