{"ast":null,"code":"import _classCallCheck from \"/Users/jessding/Downloads/HackUMass/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { FETCH_URL } from \"../utils/constants\";\n\nvar ChefServices = function ChefServices() {\n  _classCallCheck(this, ChefServices);\n\n  this.registerChef = function (chef) {\n    return fetch(FETCH_URL + 'registerChef', {\n      method: 'post',\n      body: JSON.stringify(chef),\n      headers: {\n        'content-type': 'application/json'\n      },\n      credentials: \"same-origin\"\n    }).then(function (res) {\n      return console.log(res);\n    });\n  };\n\n  this.updateProfile = function (chef, _id) {\n    return fetch(FETCH_URL + \"chef/\" + _id, {\n      method: 'put',\n      body: JSON.stringify(chef),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.findById = function (userID) {\n    return fetch(FETCH_URL + 'chef/' + userID).then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.findEndorsedRecipes = function (userID) {\n    return fetch(FETCH_URL + 'chef/' + userID + '/recipes').then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.findEndorsedRecipeId = function (userID) {\n    return fetch(FETCH_URL + 'chef/' + userID + '/recipeId').then(function (response) {\n      return response.json();\n    });\n  };\n\n  this.endorseRecipe = function (userId, recipeId) {\n    return fetch(FETCH_URL + 'chef/' + userId + '/recipes/' + recipeId, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n\n  this.removeEndorsed = function (userId, recipeId) {\n    return fetch(FETCH_URL + 'chef/' + userId + '/recipes/' + recipeId, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n};\n\nexport { ChefServices as default };","map":{"version":3,"sources":["/Users/jessding/Downloads/HackUMass/src/services/ChefServices.js"],"names":["FETCH_URL","ChefServices","registerChef","chef","fetch","method","body","JSON","stringify","headers","credentials","then","res","console","log","updateProfile","_id","response","json","findById","userID","findEndorsedRecipes","findEndorsedRecipeId","endorseRecipe","userId","recipeId","removeEndorsed"],"mappings":";AACA,SAAQA,SAAR,QAAwB,oBAAxB;;IAEqBC,Y;;;OACjBC,Y,GAAe,UAACC,IAAD,EAAU;AACrB,WAAOC,KAAK,CAACJ,SAAS,GAAG,cAAb,EAA6B;AACrCK,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAF+B;AAGrCM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAH4B;AAMrCC,MAAAA,WAAW,EAAE;AANwB,KAA7B,CAAL,CAOJC,IAPI,CAOC,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAPJ,CAAP;AAQH,G;;OAEDG,a,GAAgB,UAACZ,IAAD,EAAMa,GAAN;AAAA,WACZZ,KAAK,CAACJ,SAAS,GAAC,OAAV,GAAkBgB,GAAnB,EAAwB;AACzBX,MAAAA,MAAM,EAAG,KADgB;AAEzBC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFkB;AAGzBM,MAAAA,OAAO,EAAG;AACN,wBAAiB;AADX;AAHe,KAAxB,CAAL,CAOGE,IAPH,CAOQ,UAAAM,QAAQ,EAAG;AACf,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KATD,CADY;AAAA,G;;OAYhBC,Q,GAAW,UAAAC,MAAM;AAAA,WAAIhB,KAAK,CAACJ,SAAS,GAAG,OAAZ,GAAsBoB,MAAvB,CAAL,CAChBT,IADgB,CACX,UAAAM,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADG,CAAJ;AAAA,G;;OAGjBG,mB,GAAsB,UAACD,MAAD,EAAY;AAC9B,WAAOhB,KAAK,CAACJ,SAAS,GAAG,OAAZ,GAAsBoB,MAAtB,GAA6B,UAA9B,CAAL,CACFT,IADE,CACG,UAASM,QAAT,EAAkB;AACpB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHE,CAAP;AAIH,G;;OACDI,oB,GAAuB,UAACF,MAAD,EAAY;AAC/B,WAAOhB,KAAK,CAACJ,SAAS,GAAG,OAAZ,GAAsBoB,MAAtB,GAA6B,WAA9B,CAAL,CACFT,IADE,CACG,UAASM,QAAT,EAAkB;AACpB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHE,CAAP;AAIH,G;;OAGDK,a,GAAgB,UAACC,MAAD,EAASC,QAAT,EAAsB;AAClC,WAAOrB,KAAK,CAACJ,SAAS,GAAG,OAAZ,GAAsBwB,MAAtB,GAA+B,WAA/B,GAA6CC,QAA9C,EAAwD;AAChEpB,MAAAA,MAAM,EAAE,MADwD;AAEhEI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFuD,KAAxD,CAAZ;AAMH,G;;OAEDiB,c,GAAiB,UAACF,MAAD,EAASC,QAAT,EAAsB;AACnC,WAAOrB,KAAK,CAACJ,SAAS,GAAG,OAAZ,GAAsBwB,MAAtB,GAA+B,WAA/B,GAA6CC,QAA9C,EAAwD;AAChEpB,MAAAA,MAAM,EAAE,QADwD;AAEhEI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFuD,KAAxD,CAAZ;AAMH,G;;;SAzDgBR,Y","sourcesContent":["\nimport {FETCH_URL} from \"../utils/constants\";\n\nexport default class ChefServices {\n    registerChef = (chef) => {\n        return fetch(FETCH_URL + 'registerChef', {\n            method: 'post',\n            body: JSON.stringify(chef),\n            headers: {\n                'content-type': 'application/json'\n            },\n            credentials: \"same-origin\"\n        }).then(res => console.log(res));\n    };\n\n    updateProfile = (chef,_id) =>\n        fetch(FETCH_URL+\"chef/\"+_id, {\n            method : 'put',\n            body : JSON.stringify(chef),\n            headers : {\n                'content-type' : 'application/json'\n            }\n\n        }).then(response=> {\n            return response.json()\n        })\n\n    findById = userID => fetch(FETCH_URL + 'chef/' + userID)\n        .then(response => response.json());\n\n    findEndorsedRecipes = (userID) => {\n        return fetch(FETCH_URL + 'chef/' + userID+'/recipes')\n            .then(function(response){\n                return response.json();\n            });\n    }\n    findEndorsedRecipeId = (userID) => {\n        return fetch(FETCH_URL + 'chef/' + userID+'/recipeId')\n            .then(function(response){\n                return response.json();\n            });\n    }\n\n\n    endorseRecipe = (userId, recipeId) => {\n        return fetch(FETCH_URL + 'chef/' + userId + '/recipes/' + recipeId, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n    };\n\n    removeEndorsed = (userId, recipeId) => {\n        return fetch(FETCH_URL + 'chef/' + userId + '/recipes/' + recipeId, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n    };\n}\n"]},"metadata":{},"sourceType":"module"}